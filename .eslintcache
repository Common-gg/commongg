[{"/home/sean/Desktop/projects/common2/commongg/src/index.js":"1","/home/sean/Desktop/projects/common2/commongg/src/reportWebVitals.js":"2","/home/sean/Desktop/projects/common2/commongg/src/App.js":"3","/home/sean/Desktop/projects/common2/commongg/src/pages/CreateProfile.js":"4","/home/sean/Desktop/projects/common2/commongg/src/pages/Login.js":"5","/home/sean/Desktop/projects/common2/commongg/src/api/Twitch.js":"6","/home/sean/Desktop/projects/common2/commongg/src/pages/SignUp.js":"7","/home/sean/Desktop/projects/common2/commongg/src/pages/PageContainer.js":"8","/home/sean/Desktop/projects/common2/commongg/src/components/Input.js":"9","/home/sean/Desktop/projects/common2/commongg/src/components/DisplayImage.js":"10","/home/sean/Desktop/projects/common2/commongg/src/components/Text.js":"11","/home/sean/Desktop/projects/common2/commongg/src/components/NavigationBar.js":"12","/home/sean/Desktop/projects/common2/commongg/src/components/SearchBar.js":"13","/home/sean/Desktop/projects/common2/commongg/src/components/SignUp/SignUpButton.js":"14","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/ContentContainer.js":"15","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/GamesContainer.js":"16","/home/sean/Desktop/projects/common2/commongg/src/components/ProfilePicture.js":"17","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/FeedContainer.js":"18","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/ProfileContainer.js":"19","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/ViewPostContainer.js":"20","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/SettingsContainer.js":"21","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/PageNotFound.js":"22","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/GameFeedContainer.js":"23","/home/sean/Desktop/projects/common2/commongg/src/components/GameCard.js":"24","/home/sean/Desktop/projects/common2/commongg/src/components/SearchBox.js":"25","/home/sean/Desktop/projects/common2/commongg/src/components/FeedType.js":"26","/home/sean/Desktop/projects/common2/commongg/src/components/Post/Post.js":"27","/home/sean/Desktop/projects/common2/commongg/src/components/Post/Comment.js":"28","/home/sean/Desktop/projects/common2/commongg/src/components/Post/CreatePostModal.js":"29","/home/sean/Desktop/projects/common2/commongg/src/components/Post/PostFooter.js":"30","/home/sean/Desktop/projects/common2/commongg/src/components/IconButton.js":"31","/home/sean/Desktop/projects/common2/commongg/src/components/Post/CreateCommentModal.js":"32","/home/sean/Desktop/projects/common2/commongg/src/components/ReactionIcon.js":"33"},{"size":500,"mtime":1609267128602,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1608586802906,"results":"36","hashOfConfig":"35"},{"size":15408,"mtime":1609267128598,"results":"37","hashOfConfig":"35"},{"size":2297,"mtime":1608843819883,"results":"38","hashOfConfig":"35"},{"size":4298,"mtime":1609267128602,"results":"39","hashOfConfig":"35"},{"size":1368,"mtime":1608586802850,"results":"40","hashOfConfig":"35"},{"size":3310,"mtime":1609267128602,"results":"41","hashOfConfig":"35"},{"size":1410,"mtime":1609267128602,"results":"42","hashOfConfig":"35"},{"size":369,"mtime":1609267128598,"results":"43","hashOfConfig":"35"},{"size":1039,"mtime":1608586802850,"results":"44","hashOfConfig":"35"},{"size":319,"mtime":1609267128602,"results":"45","hashOfConfig":"35"},{"size":2379,"mtime":1609267128598,"results":"46","hashOfConfig":"35"},{"size":1540,"mtime":1609266756566,"results":"47","hashOfConfig":"35"},{"size":459,"mtime":1608586802850,"results":"48","hashOfConfig":"35"},{"size":1791,"mtime":1609266756562,"results":"49","hashOfConfig":"35"},{"size":3895,"mtime":1609266756562,"results":"50","hashOfConfig":"35"},{"size":330,"mtime":1608586802850,"results":"51","hashOfConfig":"35"},{"size":753,"mtime":1609266756562,"results":"52","hashOfConfig":"35"},{"size":4716,"mtime":1609267128598,"results":"53","hashOfConfig":"35"},{"size":2248,"mtime":1609267128598,"results":"54","hashOfConfig":"35"},{"size":4494,"mtime":1609267128598,"results":"55","hashOfConfig":"35"},{"size":434,"mtime":1608586802850,"results":"56","hashOfConfig":"35"},{"size":422,"mtime":1609266756562,"results":"57","hashOfConfig":"35"},{"size":2377,"mtime":1608843819883,"results":"58","hashOfConfig":"35"},{"size":3071,"mtime":1609266756566,"results":"59","hashOfConfig":"35"},{"size":1081,"mtime":1609096360280,"results":"60","hashOfConfig":"35"},{"size":3167,"mtime":1609267128598,"results":"61","hashOfConfig":"35"},{"size":2461,"mtime":1609267128598,"results":"62","hashOfConfig":"35"},{"size":9217,"mtime":1609267128598,"results":"63","hashOfConfig":"35"},{"size":5784,"mtime":1609273663302,"results":"64","hashOfConfig":"35"},{"size":564,"mtime":1608586802850,"results":"65","hashOfConfig":"35"},{"size":4216,"mtime":1609267128598,"results":"66","hashOfConfig":"35"},{"size":1445,"mtime":1609274502767,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"v4vbmv",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sean/Desktop/projects/common2/commongg/src/index.js",[],["153","154"],"/home/sean/Desktop/projects/common2/commongg/src/reportWebVitals.js",[],"/home/sean/Desktop/projects/common2/commongg/src/App.js",["155","156","157","158","159"],"import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './pages/Login.js';\nimport CreateProfile from './pages/CreateProfile.js';\nimport SignUp from \"./pages/SignUp\";\nimport PageContainer from './pages/PageContainer';\nimport firebase from \"firebase/app\";\nimport TeamfightTactics from \"./images/games/Teamfight Tactics.jpg\";\nimport CommonChat from \"./images/games/Common Chat.png\";\n\nconst Twitch = require(\"./api/Twitch.js\");\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\nrequire(\"firebase/storage\");\n\nfunction App() {\n\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    databaseURL: process.env.REACT_APP_databaseURL,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n  };\n\n  if (!firebase.default.apps.length) {\n    firebase.default.initializeApp(firebaseConfig);\n  }\n\n  const auth = firebase.default.auth();\n  const database = firebase.default.database();\n  const storage = firebase.default.storage();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [currentUserInfo, setCurrentUserInfo] = useState();\n  const [startUp, setStartUp] = useState(false);\n\n  const [twitchToken, setTwitchToken] = useState();\n  const [allGames, setAllGames] = useState([\n    {\n        title: \"Common Chat\",\n        image: CommonChat\n    },\n    {\n        title: \"TFT\",\n        image: TeamfightTactics\n    }\n  ]);\n\n  useEffect(() => {\n    // User authentication redirect\n    if (currentUser === undefined || currentUser === null) return;\n    const userId = currentUser.uid;\n    if (userId) {\n      database.ref('/users/' + userId).once('value').then(function (snapshot) {\n        const userData = snapshot.val();\n        if (userData === null || Object.keys(userData).length <= 1) {\n          // New user\n          if (userData === null) {\n            initializeUser(currentUser.email);\n          }\n        } else {\n          // Existing user\n          if (JSON.stringify(currentUserInfo) !== JSON.stringify(userData)) {\n            setCurrentUserInfo(userData);\n          }\n        };\n      });\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    // Access the Twitch API\n    Twitch.getToken(process.env.GET_TOKEN, (res, err) => {\n      if (err) console.log(err);\n      setTwitchToken(res.body.access_token);\n    });\n    setInterval(() => {\n      Twitch.validate(process.env.TWITCH_VALIDATE_URL, twitchToken, (res, err) => {\n        if (err) console.log(err);\n      })\n    }, 590000);\n  }, []);\n\n  useEffect(() => {\n    // Sets currentUser to the logged in user\n    auth.onAuthStateChanged(function (user) {\n      if (startUp && user === auth.currentUser) return;\n      setStartUp(true);\n      setCurrentUser(user);\n    });\n  }, []);\n\n  const signUpUser = (email, password) => {\n    // Signs user up\n    window.history.pushState(null, null, \"/\");\n    auth.createUserWithEmailAndPassword(email, password).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode, errorMessage);\n    });\n\n  }\n\n  const initializeUser = (email) => {\n    // initializes signed up user in the db\n    if (currentUser.uid) {\n      database.ref('users/' + currentUser.uid).set({\n        email: email,\n        username: \"\",\n        profile_picture: \"\",\n        about_me: \"\",\n        games: {},\n        followers: [],\n        following: [],\n        followCounts: {\n          follower: 0,\n          following: 0\n        }\n      });\n      setCurrentUserInfo({ email: email });\n    }\n  }\n\n  const storeUserProfile = (username, url, aboutMe) => {\n    // stores profile data for the user\n    if (currentUser === undefined) return;\n    database.ref('users/' + currentUser.uid).set({\n      ...currentUserInfo,\n      username: username,\n      profile_picture: url,\n      about_me: aboutMe,\n    });\n    setCurrentUserInfo({\n      ...currentUserInfo,\n      username: username,\n      profile_picture: url,\n      about_me: aboutMe,\n    })\n  }\n\n  const storeUserAboutMe = (aboutMe) => {\n    // stores profile data for the user\n    if (currentUser === undefined) return;\n    database.ref('users/' + currentUser.uid + '/about_me').set(aboutMe);\n    setCurrentUserInfo({\n      ...currentUserInfo,\n      about_me: aboutMe,\n    })\n  }\n\n  const storeUserGames = (games) => {\n    // stores game data for the user\n    if (currentUser === undefined) return;\n    database.ref('users/' + currentUser.uid + \"/games/\").set(games);\n    setCurrentUserInfo({\n      ...currentUserInfo,\n      games: games\n    })\n  }\n\n  const storeBlob = (username, blob, aboutMe = \"\") => {\n    // Stores the user's profile picture\n    const storageRef = storage.ref();\n    const ref = storageRef.child(\"users/\" + currentUser.uid);\n    ref.put(blob).then(function () {\n      ref.getDownloadURL().then(function (url) {\n        storeUserProfile(username, url, aboutMe);\n      });\n    });\n  }\n\n  const storeImage = (image, callback) => {\n    // stores a non-profile_picture image to the db.\n    const storageRef = storage.ref();\n    let imgId = URL.createObjectURL(image).split('/');\n    imgId = imgId[imgId.length - 1];\n    const ref = storageRef.child(`postImage/${imgId}`);\n    ref.put(image).then(function () {\n      ref.getDownloadURL().then(function (url) {\n        return callback(url);\n      });\n    });\n  }\n\n  const signInUser = (email, password) => {\n    // logs the user in\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode, errorMessage);\n    });\n  }\n\n  const signOut = () => {\n    // logs the user out\n    auth.signOut().then(function () {\n      // Sign-out successful.\n    }).catch(function (error) {\n      // An error happened.\n      console.log(error);\n    });\n  }\n\n  const createPost = (post) => {\n    // Creates a post in the DB\n    if (currentUser === undefined) return;\n    const postRef = database.ref('/content/posts/').push();\n    postRef.set(post);\n  }\n\n  const updateNumComments = (postId) => {\n    const numCommentsRef = database.ref('/content/posts/' + postId + '/numComments')\n    if (numCommentsRef === undefined) return;\n    numCommentsRef.set(firebase.database.ServerValue.increment(1));\n  }\n\n  const createComment = (comment) => {\n    // Creates a comment in the DB\n    if (currentUser === undefined) return;\n    const commentRef = database.ref('/content/comments/').push();\n    commentRef.set(comment);\n    //update the number of comments\n    updateNumComments(comment.postId);\n  }\n\n  const getUser = (userId, callback) => {\n    // Gets user from DB\n    database.ref('/users/' + userId).once('value').then(function (snapshot) {\n      const userData = snapshot.val();\n      if (userData !== null) return callback(userData);\n    })\n  }\n\n  const reactToPost = (username, postId, reaction, value, setPost) => {\n    //add to list to reacted\n    const reactedRef = database.ref('/content/posts/' + postId + '/reacted/' + username);\n    reactedRef.set(reaction).then(()=> {\n      //increment the counter for the post\n      const reactionRef = database.ref('/content/posts/' + postId + '/reactions/' + reaction);\n      reactionRef.set(firebase.database.ServerValue.increment(value)).then(() => {\n        getPost(postId, setPost);\n      })\n    })\n  }\n\n  //unreact to post and decrement\n  const unreactToPost = (username, postId, reaction, value, setPost)  => {\n    //add to list to reacted\n    const reactedRef = database.ref('/content/posts/' + postId + '/reacted/' + username);\n    reactedRef.set(null).then(()=> {\n      //decrement the counter for the post\n      const reactionRef = database.ref('/content/posts/' + postId + '/reactions/' + reaction);\n      reactionRef.set(firebase.database.ServerValue.increment(-value)).then(() => {\n        //make sure everything is updated on server before gettingp ost\n        getPost(postId, setPost);\n      })\n    })\n  }\n\n  //change the current reaction, decrement old, increment new\n  const changeReaction = (username, postId, oldReaction, newReaction, value, setPost) => {\n    //set the reaction of user on post to new reaction\n    const reactedRef = database.ref('/content/posts/' + postId + '/reacted/' + username);\n    reactedRef.set(newReaction).then(()=> {\n      //increment the counter for the new emote\n      const newReactionRef = database.ref('/content/posts/' + postId + '/reactions/' + newReaction);\n      newReactionRef.set(firebase.database.ServerValue.increment(value)).then(() => {\n        //decrementr the counter for old emote\n        const oldReactionRef = database.ref('/content/posts/' + postId + '/reactions/' + oldReaction);\n        oldReactionRef.set(firebase.database.ServerValue.increment(-value)).then(() =>{\n          getPost(postId, setPost);\n        })\n        \n      })\n      \n    })\n  }\n\n  const updateFollow = (userId, followType, value) => {\n    const followRef = database.ref('/users/' + userId + '/followCounts').child(followType)\n    followRef.set(firebase.database.ServerValue.increment(value));\n  }\n\n  const followUser = (follower, followed) => {\n    // follows the desired user\n    const followerRef = database.ref('/users/' + follower + '/following/').push();\n    const followedRef = database.ref('/users/' + followed + '/followers/').push();\n\n    followerRef.set(followed);\n    followedRef.set(follower);\n    updateFollow(follower, \"following\", 1);\n    updateFollow(followed, \"follower\", 1);\n  }\n\n  const unFollowUser = (follower, followed) => {\n    // unfollows the desired user\n    const followerRef = database.ref('/users/' + follower + '/following/');\n    const followedRef = database.ref('/users/' + followed + '/followers/');\n\n    followerRef.once('value').then(function (snapshot) {\n      let followingList = snapshot.val();\n      const followStamp = Object.keys(followingList)[Object.values(followingList).indexOf(followed)];\n      followerRef.set({ ...followingList, [followStamp]: null });\n    });\n    followedRef.once('value').then(function (snapshot) {\n      let followerList = snapshot.val();\n      const followStamp = Object.keys(followerList)[Object.values(followerList).indexOf(follower)];\n      followedRef.set({ ...followerList, [followStamp]: null });\n    });\n    updateFollow(follower, \"following\", -1);\n    updateFollow(followed, \"follower\", -1);\n  }\n\n  const getTitleOfGameById = (gameId) => {\n    // Gets the title of a game by it's ID\n    let gameTitle = \"\";\n\n    database.ref(\"/games/\").once(\"value\").then((snapshot) => {\n      let games = snapshot.val();\n\n      if (games.hasOwnProperty(gameId)) {\n        gameTitle = games[gameId].title;\n      }\n      else {\n        console.log(`Couldnt find game name for game with ID: ${gameId}`);\n      }\n      return gameTitle;\n    });\n  }\n\n  const getAllGames = (callback) => {\n    // gets all games from the db\n    database.ref(\"/games/\").once(\"value\").then((snapshot) => {\n      return callback(snapshot.val());\n    });\n  }\n\n  const getPosts = (filter, sort, callback) => {\n    // gets all posts for the DB\n    const postRef = database.ref('/content/posts/').orderByChild(sort).equalTo(filter);\n    postRef.once('value', function (snapshot) {\n      if (snapshot.val() !== null) {\n        return callback(snapshot.val());\n      } else {\n        return callback({\n          \"00000000\": {\n            author: \"404\",\n            caption: \"Nothing here\",\n            game: \"\",\n            link: \"\",\n            text: \"There are no posts to see\",\n            timestamp: 0,\n            title: \"No Content\",\n            type: \"text\"\n          }\n        })\n      }\n    });\n  }\n\n  const existsUsername = (username) => {\n    // checks if there is a user with the username already\n    // returns true if it exists false if doesn't exist\n    return new Promise(function (resolve, reject) {\n      const postRef = database.ref('/users/').orderByChild(\"username\").equalTo(username);\n      postRef.once('value').then((snapshot) => {\n        const usersWithUsername = snapshot.val();\n\n        //if it's not null, there is some user with the username \n        if (usersWithUsername !== null) {\n          return resolve(true);\n        } else {\n          return resolve(false);\n        }\n      });\n    })\n  }\n\n  const getPost = (postId, callback) => {\n    // Gets a single post from DB\n    database.ref('/content/posts/' + postId).once('value').then((snapshot) => {\n      const postData = snapshot.val();\n      if (postData !== null) return callback(postData);\n    })\n  }\n\n  const getComments = (filter, sort, callback) => {\n    // gets comments from db\n    const postRef = database.ref('/content/comments/').orderByChild(sort).equalTo(filter);\n    postRef.once('value', function (snapshot) {\n      if (snapshot.val() !== null) return callback(snapshot.val());\n    });\n  }\n\n  const search = (value, callback, query) => {\n    // search the db\n    const usersRef = database.ref('/users/').orderByChild('username').startAt(value.toUpperCase()).endAt(value.toLowerCase() + \"\\uf8ff\");\n    usersRef.once('value', function (snapshot) {\n      console.log(snapshot.val());\n      if (snapshot.val() !== null) return callback(snapshot.val(), query);\n    });\n  }\n\n  if (currentUser === undefined || (currentUserInfo === undefined && currentUser !== null)) {\n    return (<div></div>)\n  } else if (currentUser === null) {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/SignUp\" render={\n            (props) => (\n              <SignUp signUpUser={signUpUser} />\n            )} />\n          <Route path=\"/\" render={\n            (props) => (\n              <Login signInUser={signInUser} />\n            )} />\n        </Switch>\n      </Router>\n    )\n  } else if (currentUserInfo.username === \"\") {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" render={\n            (props) => (\n              <CreateProfile existsUsername={existsUsername} storeBlob={storeBlob} />\n            )} />\n        </Switch>\n      </Router>\n    )\n  } else {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" render={\n            (props) => (\n              <PageContainer\n                currentUserId={currentUser.uid}\n                currentUserInfo={currentUserInfo}\n\n                allGames={allGames}\n                setAllGames={setAllGames}\n\n                signOut={signOut}\n\n                getPosts={getPosts}\n                getPost={getPost}\n                reactToPost={reactToPost}\n                unreactToPost={unreactToPost}\n                changeReaction={changeReaction}\n                createPost={createPost}\n                createComment={createComment}\n                updateNumComments={updateNumComments}\n                getComments={getComments}\n                search={search}\n\n                storeImage={storeImage}\n                storeBlob={storeBlob}\n\n                getUser={getUser}\n                followUser={followUser}\n                unFollowUser={unFollowUser}\n                storeUserGames={storeUserGames}\n                storeUserAboutMe={storeUserAboutMe}\n              />\n            )} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","/home/sean/Desktop/projects/common2/commongg/src/pages/CreateProfile.js",["160","161"],"import React, { useState } from 'react';\nimport Input from '../components/Input.js';\n// import Button from '../components/Button.js';\nimport DisplayImage from '../components/DisplayImage.js'\nimport add from \"../images/icons/Group-104.png\";\nimport arrow from \"../images/icons/arrow-right.png\";\n\nfunction CreateProfile(props) {\n  // add categories later\n\n  const [displayName, setDisplayName] = useState();\n  const [img, setImg] = useState('https://static.zerochan.net/Dango.%28Teamfight.Tactics%29.full.2963102.jpg');\n  const [failed, setFailed] = useState(false);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    props.existsUsername(displayName.current.value).then((existsUser) => {\n      if (existsUser === true) {\n        console.log(displayName.current.value);\n        setFailed(true);\n      } else {\n        console.log(\"success\")\n        props.storeBlob(displayName.current.value, img);\n      }\n    })\n  }\n\n  const addCSS = {\n    /* add image */\n    width: \"216px\",\n    height: \"216px\",\n    left: \"calc(50% - 216px/2)\",\n    top: \"calc(50% - 216px/2 + 91px)\",\n  }\n\n  return (\n    <div className=\"CreateProfile\">\n      <div className=\"mx-auto card text-center\" style={{\n        margin: \"175px\",\n        maxWidth: \"485px\",\n        backgroundColor: \"#292833\",\n        borderRadius: \"10px\",\n        boxShadow: \"-1px 10px 250px 1px #171421\",\n        color: \"#BF9AFC\"\n      }}>\n<br />\n        <h4>create your profile</h4>\n        < br />\n        Pick a username\n        <Input type=\"displayName\" placeholder=\"username\" track={setDisplayName} style= {{ backgroundColor: \"#292833\" }} />\n        {failed ? <p style={{ color: \"red\" }}>username already in use</p>:\"\"}\n        < br />\n        add a profile picture\n        <DisplayImage type=\"profileImage\" id=\"createAvatar\" currentImg={add} setImg={setImg} />\n        <button type=\"submit\" className=\"btn btn-outline-dark\"\n          style={{\n            marginBottom: \"20px\",\n            backgroundColor: \"transparent\",\n            color: \"#BF9AFC\",\n            border: \"solid\",\n            borderRadius: \"10px\",\n            borderColor: \"#BF9AFC\",\n            borderWidth: \"2px\"\n          }}\n          onClick={handleSubmit}>\n       <img src={arrow} />\n        </button>\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default CreateProfile;\n","/home/sean/Desktop/projects/common2/commongg/src/pages/Login.js",["162","163","164","165","166","167"],"import React, { useRef, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/icons/logo1light.png\";\nimport arrow from \"../images/icons/arrow-right.png\";\n\nfunction Login(props) {\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const logoCSS = {\n    /* logo1light 1 */\n    width: \"100px\",\n    height: \"99.01px\",\n    left: \"393px\",\n    top: \"179px\"\n  }\n\n  function handleSignIn(e) {\n    if (e.key === \"Enter\") {\n      props.signInUser(emailRef.current.value, passwordRef.current.value);\n    }\n  }\n\n  const inputStyle = {\n    backgroundColor: \"transparent #292833\",\n    color: \"#BF9AFC\",\n    border: \"solid\",\n    borderColor: \"#BF9AFC\",\n  }\n\n  return (\n    <div className=\"Login\">\n      <div className=\"mx-auto card\" style={{\n        margin: \"150px\",\n        maxWidth: \"410px\",\n        backgroundColor: \"#292833\",\n        borderRadius: \"10px\",\n        boxShadow: \"-1px 10px 250px 1px #171421\"\n      }}>\n\n        <div style={{ margin: \"20px 20px 0px 20px\" }} className=\"row\">\n          <div className=\"col-4\"></div>\n          <img src={logo} style={logoCSS} />\n          <div className=\"col-5\"></div>\n          <br />\n          <div className=\"form-group\" >\n            <div className=\"row\">\n              <div className=\"col-6\"></div>\n              <div className=\"row\">\n                <div className=\"col-6\"></div>\n                <div className=\"row\">\n                  <div className=\"col-6\"></div>\n                  <div className=\"row\">\n                    <div className=\"col-4\"></div>\n                    <div className=\"Input\" >\n                      <br />\n                      <input style={inputStyle} className=\"border border-secondary\" type=\"email\"\n                        placeholder=\"email\" ref={emailRef}\n                        onKeyPress={(e) => handleSignIn(e)} style={{ backgroundColor: \"#292833\" }} />\n                    </div></div></div></div></div>\n          </div>\n          <div className=\"form-group\" >\n            <div className=\"row\">\n              <div className=\"col-1\"></div>\n              <div className=\"row\">\n                <div className=\"col-1\"></div>\n                <div className=\"row\">\n                  <div className=\"col-1\"></div>\n                  <div className=\"row\">\n                    <div className=\"col-1\"></div>\n                    <div className=\"row\">\n                      <div className=\"col-1\"></div>\n                      <div className=\"row\">\n                        <div className=\"col-1\"></div>\n                        <div className=\"Input\" >\n                          <input style={inputStyle} className=\"border border-secondary\" type=\"Password\"\n                            placeholder=\"password\" ref={passwordRef}\n                            onKeyPress={(e) => handleSignIn(e)} style={{ backgroundColor: \"#292833\" }} />\n                        </div></div></div></div></div></div></div>\n          </div>\n          <div className=\"row col-12\">\n          <div className=\"col-5\"></div>\n            <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-outline-light\"\n                        onClick={() => props.signInUser(emailRef.current.value, passwordRef.current.value)} style={{\n                          marginBottom: \"20px\",\n                          backgroundColor: \"transparent\",\n                          color: \"#BF9AFC\",\n                          border: \"solid\",\n                          borderRadius: \"10px\",\n                          borderColor: \"#BF9AFC\",\n                          borderWidth: \"2px\",\n                        }}>\n                        <img src={arrow} />\n                      </button>\n                    </div></div></div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4\"></div>\n        <div className=\"text-center col-4\">\n          <Link to=\"/signup\">\n            <p className=\"col\" style={{ color: \"#BF9AFC\", textDecoration: \"underline\" }}>\n              new? sign up\n              </p>\n          </Link>\n          <a href=\"\" style={{ color: \"#BF9AFC\", textDecoration: \"underline\" }}>\n            <p className=\"col\">\n              forgot password?</p>\n          </a>\n        </div>\n        <div className=\"col-4\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/sean/Desktop/projects/common2/commongg/src/api/Twitch.js",[],"/home/sean/Desktop/projects/common2/commongg/src/pages/SignUp.js",["168","169"],"import React, { useRef, useState } from \"react\";\nimport SignUpButton from \"../components/SignUp/SignUpButton.js\";\nimport logo from \"../images/icons/logo1light.png\";\nimport Input from '../components/Input.js';\nimport { Link } from \"react-router-dom\";\n\nfunction SignUp(props) {\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const signUp = () => {\n    console.log(email.current.value);\n    props.signUpUser(email.current.value, password.current.value);\n  }\n\n  const logoCSS = {\n    /* logo1light 1 */\n    width: \"100px\",\n    height: \"99.01px\",\n    left: \"393px\",\n    top: \"179px\"\n  }\n\n  return (\n    <div>\n      <div className=\"mx-auto card\"\n        style={{\n          margin: \"150px\",\n          maxWidth: \"410px\",\n          backgroundColor: \"#292833\",\n          borderRadius: \"10px\",\n          boxShadow: \"-1px 10px 250px 1px #171421\"\n        }}>\n          \n        <div style={{ margin: \"20px 20px 0px 20px\" }} className=\"row\">\n          <div className=\"col-4\"></div>\n          <img src={logo} style={logoCSS} />\n          <div className=\"col-5\"></div>\n          <br /> \n          <div className=\"form-group\" >\n          <div className=\"row\">\n              <div className=\"col-6\"></div>\n              <div className=\"row\">\n                <div className=\"col-6\"></div>\n                <div className=\"row\">\n                  <div className=\"col-6\"></div>\n                  <div className=\"row\">\n                    <div className=\"col-4\"></div>\n                    <br />\n                    <Input type=\"email\"\n                      bootstrap=\"border border-secondary\"\n                      placeholder=\"Email\"\n                      track={setEmail}\n                      style={{ backgroundColor: \"#292833\", }} />\n                  </div></div></div></div></div>\n          <div className=\"form-group\">\n          <div className=\"row\">\n              <div className=\"col-1\"></div>\n              <div className=\"row\">\n                <div className=\"col-1\"></div>\n                <div className=\"row\">\n                  <div className=\"col-1\"></div>\n                  <div className=\"row\">\n                    <div className=\"col-1\"></div>\n                    <div className=\"row\">\n                      <div className=\"col-1\"></div>\n                      <div className=\"row\">\n                        <div className=\"col-1\"></div>\n                    <Input type=\"password\"\n                      bootstrap=\"border border-secondary\"\n                      placeholder=\"Password\"\n                      track={setPassword}\n                      style={{ backgroundColor: \"#292833\", }} />\n                  </div></div></div></div></div></div></div>\n          <div className=\"row col-12\">\n          <div className=\"col-5\"></div>\n            <div className=\"form-group\">\n              <SignUpButton click={signUp} />\n            </div></div></div>\n        <div className=\"row\">\n          <div className=\"col-5\"></div>\n\n          <br />\n        </div>\n\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4\"></div>\n        <div className=\"text-center col-4\">\n      <Link to=\"/\">\n        <p className=\"col\" style={{ color: \"#BF9AFC\", textDecoration: \"underline\" }}>\n          Login\n      </p>\n      </Link>\n    </div></div></div>\n  )\n}\n\nexport default SignUp;","/home/sean/Desktop/projects/common2/commongg/src/pages/PageContainer.js",["170"],"import React, { useState } from 'react';\nimport Text from '../components/Text.js'\nimport NavigationBar from '../components/NavigationBar.js';\nimport ContentContainer from '../components/ContentContainers/ContentContainer.js';\nimport GamesContainer from '../components/ContentContainers/GamesContainer.js';\nimport SearchBar from '../components/SearchBar.js';\n\nfunction PageContainer(props) {\n\n  const [search, setSearch] = useState();\n\n  return (\n    <div className=\"PageContainer\">\n      <GamesContainer {...props} />\n      <div className=\"container-fluid\">\n        <br /><br />\n        <div className=\"row\">\n        <div className=\"col-2\"></div>\n          <div className=\"col-2\">\n            <NavigationBar currentUserId={props.currentUserId} currentUserInfo={props.currentUserInfo} signOut={props.signOut} allGames={props.allGames} setAllGames={props.setAllGames}/>\n          </div>\n          <div className=\"col-4\">\n            <div className=\"text-center\">\n              <SearchBar track={setSearch} search={props.search} allGames={props.allGames} setAllGames={props.setAllGames}/>\n              <br />\n            </div>\n            <ContentContainer {...props} />\n          </div>\n          <div className=\"col-3\">\n            <Text text=\"ADS GO HERE TO MAKE $$ YEP\" />\n          </div>\n          <div className=\"col-1\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PageContainer;\n","/home/sean/Desktop/projects/common2/commongg/src/components/Input.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/DisplayImage.js",["171"],"import React, { useState } from \"react\";\n\nfunction DisplayImage(props) {\n  const [image, setImage] = useState(props.currentImg);\n\n  const onImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      setImage(URL.createObjectURL(img));\n      props.setImg(img);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <div className=\"mx-auto\">\n          <label htmlFor={props.id} >\n            <img src={image || props.currentImg || \"https://assets.dryicons.com/uploads/icon/svg/9920/974969e2-49be-4625-99be-25daca02778c.svg\"}\n              style={{ width: \"150px\", height: \"150px\", borderRadius: \"50%\", margin: \"20px\", cursor: \"pointer\" }}\n              alt=\"profile picture\" />\n          </label>\n          <input\n            id={props.id}\n            type=\"file\"\n            name=\"UserImage\"\n            accept=\"image/*\"\n            style={{ display: \"none\" }}\n            onChange={onImageChange} />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default DisplayImage;","/home/sean/Desktop/projects/common2/commongg/src/components/Text.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/NavigationBar.js",["172","173","174","175"],"import React, { useEffect , useState} from 'react';\nimport { Link } from \"react-router-dom\";\nimport ProfilePicture from './ProfilePicture.js';\n\nimport home from \"../images/icons/logo1accent.png\";\nimport trend from \"../images/icons/trendingaccent-1.png\";\nimport follow from \"../images/icons/followingaccent-1.png\";\nimport setting from \"../images/icons/settingsaccent-1.png\";\nimport editGame from \"../images/icons/editgameaccent-1.png\"\n\nfunction NavigationBar(props) {\n    const iconStyle = {\n        width: \"35px\",\n        height: \"35px\",\n        marginRight: \".5rem\"\n    };\n\n    const linkStyle = {\n        color: \"#BF9AFC\",\n        textDecoration: 'none',\n        fontSize: \"20px\"\n    };\n\n    useEffect(() => {\n        if (props.currentUserInfo.games === undefined) {\n            document.getElementById(\"editGamesToggle\").click();\n        }\n    }, []);\n\n    return (\n        <div className=\"NavigationBar\" style={{ color: \"#BF9AFC\" }}>\n            <Link to={\"/profile/\" + props.currentUserId} style={linkStyle}>\n                <p><ProfilePicture currentUserInfo={props.currentUserInfo} width=\"35px\" height=\"35px\" />  profile</p>\n            </Link>\n            <Link to=\"/\" style={linkStyle}>\n                <p><img src={home} style={iconStyle} alt=\"\" /> home</p>\n            </Link>\n            <Link to=\"/following\" style={linkStyle}>\n                <p><img src={follow} style={iconStyle} alt=\"\" /> following</p>\n            </Link>\n            <Link to=\"/trending\" style={linkStyle}>\n                <p><img src={trend} style={iconStyle} alt=\"\" /> trending</p>\n            </Link>\n            <Link to=\"/settings\" style={linkStyle}>\n                <p><img src={setting} style={iconStyle} alt=\"\" /> settings</p>\n            </Link>\n            {props.currentUserInfo.games.map((game) => {\n                return <Link to={\"/games/\" + (props.allGames[game].title.split(\" \")).join('').toLowerCase()} key={props.allGames[game].title} style={linkStyle}>\n                            <p>{props.allGames[game].title}</p>\n                        </Link>\n            })}\n            <a id=\"editGamesToggle\" data-toggle=\"modal\" data-target=\"#chooseGamesModal\" style={{ cursor: \"pointer\" }} >\n                <p style={linkStyle}>\n                    <img src={editGame} style={iconStyle}></img>edit games</p>\n            </a>\n        </div>\n    );\n}\n\nexport default NavigationBar;\n","/home/sean/Desktop/projects/common2/commongg/src/components/SearchBar.js",["176","177","178","179","180","181","182"],"import React, { useState, useRef, Fragment } from 'react';\nimport searchIcon from '../images/icons/search.png'\nimport { Typeahead, withAsync } from 'react-bootstrap-typeahead';\nimport SearchBox from './SearchBox';\n\nconst AsyncTypeahead = withAsync(Typeahead);\n\nfunction SearchBar(props) {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const value = useRef();\n\n  const barStyle = {\n    border: \"2px solid #BF9AFC\",\n    borderRadius: \"8px\",\n    width: \"100%\",\n    height: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n\n  const imgStyle = {\n    position: \"relative\",\n    float: \"right\",\n    top: \"-px\",\n    width: \"30px\",\n    height: \"30px\",\n    cursor: \"pointer\"\n  }\n\n  const afterSearch = (users) => {\n    setOptions(Object.values(users).map((user, i) => ({\n      avatar_url: user.profile_picture,\n      id: Object.keys(users)[i],\n      login: user.username\n    })));\n    setIsLoading(false);\n  }\n\n  const handleSearch = (query) => {\n    setIsLoading(true);\n    props.search(query, afterSearch);\n  };\n\n  function handleOnKeyDown(e) {\n    if (e.key === \"Enter\") {\n      props.search(value.current.value);\n    }\n  }\n\n  const filterBy = () => true;\n\n  return (\n    <div>\n      <div className=\"Input\" style={barStyle} >\n        <SearchBox search={props.search} allGames={props.allGames} setAllGames={props.setAllGames}/>\n        <img src={searchIcon} alt=\"search bar\" style={imgStyle} />\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","/home/sean/Desktop/projects/common2/commongg/src/components/SignUp/SignUpButton.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/ContentContainer.js",["183"],"import React, { useEffect, useState } from 'react';\nimport FeedContainer from './FeedContainer.js';\nimport ProfileContainer from './ProfileContainer.js';\nimport ViewPostContainer from './ViewPostContainer.js';\nimport SettingsContainer from './SettingsContainer.js';\nimport GamesContainer from './GamesContainer.js';\nimport PageNotFound from './PageNotFound.js';\nimport GameFeedContainer from './GameFeedContainer.js'\n\nfunction ContentContainer(props) {\n  const [pageState, setPageState] = useState();\n  const [pageId, setPageId] = useState();\n  useEffect(() => {\n    let url = window.location.href;\n    url = url.split('/');\n    setPageState(url[3]);\n    if (url.length >= 5) {\n      //if page state is games check the id\n      if (url[3] === \"games\"){\n        //find current title's id which is its index in the array\n        console.log(url[4])\n        const curGameId = props.allGames.findIndex((game) => {\n          console.log(game.title.split(\" \").join('').toLowerCase());\n          return game.title.split(\" \").join('').toLowerCase() === url[4];\n        });\n        //game id is the index\n        setPageId(curGameId.toString());\n        console.log(\"the game index is: \" + curGameId);\n      } else {\n        setPageId(url[4]);\n      }\n    }\n    \n    \n  });\n\n  switch (pageState) {\n    case \"profile\":\n      return <ProfileContainer {...props} pageId={pageId} />;\n    case \"post\":\n      return <ViewPostContainer {...props} />;\n    case \"settings\":\n      return <SettingsContainer {...props} />;\n    case \"editgames\":\n      return <GamesContainer {...props} />;\n    case \"\":\n      return <FeedContainer {...props} />;\n    case \"games\":\n      return <GameFeedContainer {...props} pageId={pageId} />;\n    default: \n      return <PageNotFound />;\n  }\n}\n\nexport default ContentContainer;\n","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/GamesContainer.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/ProfilePicture.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/FeedContainer.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/ProfileContainer.js",["184","185","186","187","188","189"],"import React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Text from '../Text.js';\nimport ProfilePicture from '../ProfilePicture.js';\nimport FeedType from '../FeedType.js';\n// import plus from \"../images/icons/followingplus-1.png\";\n\nfunction ProfileContainer(props) {\n    const [user, setUser] = useState({ profile: [], games: [], followCounts: {} });\n\n    const [followBtnState, setFollowBtnState] = useState({\n        text: \"Follow\"\n    })\n    const [followBtnStyle, setFollowBtnStyle] = useState({ visibility: \"visible\" });\n\n    function followHandler() {\n        if (followBtnState.text === \"Follow\") {\n            props.followUser(props.currentUserId,props.pageId);\n            setFollowBtnState({ ...followBtnState, text: \"Following\" });\n        } else {\n            props.unFollowUser(props.currentUserId,props.pageId);\n            setFollowBtnState({ ...followBtnState, text: \"Follow\" });\n        }\n    }\n\n    useEffect(() => {\n        props.getUser(props.pageId, setUser);\n    }, [props.pageId]);\n\n    useEffect(() => {\n        if (props.currentUserId) {\n            if (props.currentUserId ===props.pageId) {\n                setFollowBtnStyle({ visibility: \"hidden\" });\n            }\n        }\n    }, [props.pageId]);\n\n    useEffect(() => {\n        if (props.currentUserInfo.following) {\n            let temp = Object.values(props.currentUserInfo.following);\n            if (temp.includes(props.pageId)) {\n                setFollowBtnState({ ...followBtnState, text: \"Following\" });\n            }\n        }\n    }, [])\n\n    const checkId = () => {\n        if(props.pageId !== undefined){\n            return (\n                <FeedType {...props} filter={props.pageId} sort={\"author\"}/>\n            )\n        }\n    }\n\n    const checkAboutMe = () => {\n        if (user.about_me !== \"\") {\n            return (<Text style={{overflowWrap: 'break-word', paddingLeft: \"5px\", paddingRight: \"5px\"}} text={\"About Me: \" + user.about_me} />)\n        }\n    }\n\n    const followStyle = {\n        color: \"#BF9AFC\", \n        fontSize: \"1.2rem\",\n        marginRight: \"1rem\"\n    };\n\n    const numberStyle = {\n        fontSize: \"1.2rem\"\n    };\n\n    return (\n        <div className=\"ProfileContainer container\" style={{\n            borderStyle: \"solid\",\n            borderRadius: \"5px\",\n            borderColor: \"#BF9AFC\",\n            borderWidth: \"2px\",\n        }}>\n            <br />\n            <div container>\n                \n            </div>\n            <div className=\"row p-0\">\n                <div className=\"col-1\"></div>\n                    <ProfilePicture currentUserInfo={user} width=\"115px\" height=\"115px\" />\n                <div className=\"col-5\">\n                    <h2><Text text={user.username} /></h2>\n                    <div className=\"d-flex flex-wrap\">\n                        <span style={numberStyle}>{user.followCounts.following} \n                            <a style={followStyle}> following</a>\n                        </span> \n                        <span style={numberStyle}>{user.followCounts.follower} \n                            <a style={followStyle}> followers</a>\n                        </span>\n                    </div>\n                   \n                </div>\n                <div className=\"col-2\">\n                    <button onClick={() => followHandler()} type=\"button\" className=\"btn btn-primary\" style={followBtnStyle}>\n                        {followBtnState.text}\n                        {/* <img src={plus} /> */}\n                    </button>\n                </div>\n                <div className=\"container text-wrap\" style={{margin: \"auto\"}}>\n                    {checkAboutMe()}\n                </div>\n            </div>\n            <hr style={{ backgroundColor: '#5F5177', width: '90%' }} />\n            <div className=\"flex-wrap d-flex flex-row justify-content-center\">\n                <div className=\"flex-wrap d-flex flex-row justify-content-center\" style={{ width: \"70%\" }}>\n                    {user.games.map(index => {\n                        return <img\n                            src={props.allGames[index].image}\n                            key={\"game-image2\" + index}\n                            alt={props.allGames[index].title}\n                            className=\"rounded\"\n                            style={\n                                {\n                                    width: '22%',\n                                    height: 'auto',\n                                    margin: '3%'\n                                }}\n                        ></img>\n                    })}\n                </div>\n            </div>\n            {checkId()}\n        </div>\n    );\n}\n\nexport default ProfileContainer;\n","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/ViewPostContainer.js",["190","191","192","193"],"import React, { useEffect, useState } from 'react';\nimport Text from '../Text.js';\nimport Post from '../Post/Post.js';\nimport Comment from '../../components/Post/Comment.js';\n\nfunction ViewPostContainer(props) {\n\n    const [post, setPost] = useState({\n        author: \"404\",\n        caption: \"Nothing here\",\n        game: \"\",\n        link: \"\",\n        text: \"There are no posts to see\",\n        timestamp: 0,\n        title: \"No Content\",\n        type: \"text\"\n    });\n    const [postId, setPostId] = useState();\n    const [comments, setComments] = useState({\n        \"00000000\": {\n            author: \"404\",\n            commentText: \"There are no posts to see\",\n            timestamp: 0,\n            postId: \"\"\n        }\n    });\n    const [commentRefresh, setCommentRefresh] = useState(0)\n    const updateRefresh = function() {\n        setCommentRefresh(commentRefresh + 1);\n    }\n\n    useEffect(() => {\n        let url = window.location.href;\n        url = url.split('/');\n        setPostId(url[url.length - 1]);\n    }, []);\n\n    useEffect(() => {\n        props.getPost(postId, setPost);\n    }, [postId, commentRefresh])\n\n    useEffect(() => {\n        console.log(post);\n        if (post.author !== \"404\") {\n            props.getComments(postId, \"postId\", setComments);\n        }\n    }, [post, commentRefresh])\n\n    useEffect(() => {\n        console.log(comments);\n    }, [comments])\n\n    return (\n        <div className=\"ViewPostContainer\">\n            <Post {...props} post={post} postId={postId} showCommentButton={true}\n                updateRefresh={updateRefresh} showCategory={true}\n                style={{\n                    paddingBottom: '0px',\n                    paddingLeft: '0px',\n                    paddingRight: '0px'\n                }}\n            />\n            <br />\n            {Object.values(comments).map(comment => {\n                if (comment.author !== \"404\")\n                    return (\n                        <div>\n                            <hr style={{ backgroundColor: '#5F5177', width: '100%' }} />\n                            <Comment comment={comment} getUser={props.getUser} />\n                        </div>\n                    )\n            })}\n        </div>\n    );\n}\n\nexport default ViewPostContainer;\n","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/SettingsContainer.js",["194","195"],"import React, { useRef, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport DisplayImage from \"../../components/DisplayImage.js\"\nimport edit from \"../../images/icons/edit-1.png\";\n\nfunction SettingsContainer(props) {\n  const aboutMeRef = useRef();\n  const [selectedFile, setSelectedFile] = useState({ current: { value: \"\" } });\n\n  useEffect(() => {\n    aboutMeRef.current.value = props.currentUserInfo.about_me;\n    setSelectedFile({ current: { value: props.currentUserInfo.profile_picture } });\n  }, []);\n\n  function handleUpdateButtonClick(e) {\n    let aboutMe = props.currentUserInfo.about_me;\n    let profilePicture = props.currentUserInfo.profile_picture;\n    let profilePictureUpdated = false;\n\n    if (aboutMeRef.current.value !== \"\") {\n      aboutMe = aboutMeRef.current.value;\n    }\n    //seleted file initializes to { current: { value: \"\" } }\n    //if selected doesn't have current it means it loaded from setImage\n    if (selectedFile.current === undefined) {\n      profilePictureUpdated = true;\n      profilePicture = selectedFile;      \n    }\n    if (profilePictureUpdated) {\n      props.storeBlob(props.currentUserInfo.username, profilePicture, aboutMe);\n    } else {\n      props.storeUserAboutMe(aboutMe);\n    }\n    \n  }\n\n  return (\n    <div className=\"SettingsContainer\" style={{\n      border: \"solid\",\n      borderBottomstyle: \"none\",\n      borderRadius: \"10px\",\n      borderColor: \"#5F5177\",\n      borderWidth: \"1px\",\n      padding: \"0px 0px 50px 0px\",\n      overflow: \"hidden\"\n    }}>\n      <div className=\"row col-12\">\n        <div className=\"col-4\"></div>\n        <div className=\"col-8\">\n          <h2 style={{ color: \"#BF9AFC\" }}>edit profile</h2>\n        </div>\n      </div>\n      <div className=\"row col-12\">\n        <div className=\"col-3\"></div>\n        <div className=\"col-8\">\n          <div className=\"container\" style={{ cursor: \"pointer\" }}>\n            <DisplayImage type=\"profileImage\" id=\"fileInput\"\n              currentImg={props.currentUserInfo.profile_picture} setImg={setSelectedFile} />\n            <label htmlFor=\"fileInput\"\n              className=\"btn\"\n              style={{\n                width: \"30px\",\n                height: \"30px\",\n                background: \"transparent\",\n                position: 'relative',\n                top: \"-90px\",\n                right: \"-90px\"\n              }}>\n              <img src={edit} style={{ width: \"60px\", height: \"60px\" }} />\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"row col-12\">\n        <div className=\"row col-12\">\n          <div className=\"col-3\"></div>\n          <div className=\"col-8\">\n            <form>\n              <div className=\"form-group\" style={{ color: \"#FFFFFF\" }}>\n                <textarea className=\"form-control\"\n                  rows=\"3\"\n                  id=\"formControlTextarea1\"\n                  placeholder=\"About me...\"\n                  ref={aboutMeRef}\n                  style={{\n                    backgroundColor: \"transparent\",\n                    color: \"#BF9AFC\",\n                    resize: \"none\",\n                    maxWidth: \"500px\"\n                  }}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"col-8\"></div>\n        <div className=\"row col-2\">\n          <button type=\"button\"\n            className=\"btn\"\n            onClick={() => handleUpdateButtonClick()}\n            style={{\n              backgroundColor: \"transparent\",\n              color: \"#BF9AFC\",\n              border: \"solid\",\n              borderRadius: \"10px\",\n              borderColor: \"#BF9AFC\",\n              borderWidth: \"2px\",\n            }}>\n            update\n                </button>\n        </div>\n        <hr style={{ backgroundColor: '#BF9AFC', width: '90%', left: \"5px\" }} /></div>\n      <div className=\"row\">\n        <div className=\"col-1\"></div>\n        <div className=\"row col-12\">\n          <div className=\"col-1\"></div>\n          <div className=\"col text-center\">\n            <Link to=\"/\" style={{ color: \"#BF9AFC\", textDecoration: \"underline\", }}>\n              <br /><p onClick={() => props.signOut()}>sign out</p>\n            </Link>\n            <br /><p style={{ color: \"#BF9AFC\" }}>suggestions? <br /> join our <a href=\"https://discord.gg/dsEAEGGaHn\" style={{ color: \"#BF9AFC\", textDecoration: \"underline\" }}>discord</a></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SettingsContainer;\n","/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/PageNotFound.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/ContentContainers/GameFeedContainer.js",["196","197","198"],"import React, { useState, useEffect } from 'react';\nimport FeedType from '../FeedType.js';\nimport { useLocation } from 'react-router-dom'\n\nfunction GameFeedContainer(props) {\n  const [gameId, setGameId] = useState(\"-1\");\n  \n  return (\n    <div>\n      {gameId===\"-1\"?null:<p>{props.allGames[gameId]}</p>}\n      <FeedType {...props} filter={props.pageId} sort={\"game\"}/>\n    </div>\n  );\n}\n\nexport default GameFeedContainer;\n","/home/sean/Desktop/projects/common2/commongg/src/components/GameCard.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/SearchBox.js",["199"],"import React, { useState, useRef, Fragment } from 'react';\nimport { Typeahead, withAsync } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { Link } from \"react-router-dom\";\n\nconst AsyncTypeahead = withAsync(Typeahead);\n\nfunction SearchBox(props) {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const inputStyle = {\n    border: \"none\",\n    width: \"100%\"\n  }\n\n  //the users from search results get passed in\n  const afterSearch = (users, query) => {\n    let options = [{name: \"users\", type: \"label\"}]\n    options = options.concat(Object.values(users).map((user, i) => ({\n      avatar_url: user.profile_picture,\n      id: Object.keys(users)[i],\n      name: user.username,\n      type: \"user\"\n    })));\n    options.push({name: \"games\", type: \"label\"})\n    const gameResult = searchGames(query);\n    //might introduce issue when a person's name is same as game's name\n    options = options.concat(gameResult.map((game, i) => ({\n      image: game.image,\n      name: game.title,\n      type: \"game\"\n    })));\n    setOptions(options);\n    setIsLoading(false);\n  }\n\n  //search games based on query\n  const searchGames = (query) => {\n    console.log(\"search games\");\n    console.log(query)\n    let result = props.allGames.filter((game) => {\n      //check if query is in the title\n      return game.title.toLowerCase().includes(query.toLowerCase());\n    });\n    console.log(result)\n    return result;\n  }\n\n  const handleSearch = (query) => {\n    console.log(query);\n    setIsLoading(true);\n    props.search(query, afterSearch, query);\n  };\n\n  const filterBy = () => true;\n\n  return (\n    <AsyncTypeahead\n      filterBy={filterBy}\n      id=\"searchBox\"\n      isLoading={isLoading}\n      labelKey=\"name\"\n      minLength={3}\n      onSearch={handleSearch}\n      options={options}\n      placeholder=\"search\"\n      style={inputStyle}\n      renderMenuItemChildren={(option, props) => (\n        <Fragment>\n          {option.type===\"user\" && <Link to={\"/profile/\" + option.id }>\n            <img\n              alt={option.name}\n              src={option.avatar_url}\n              style={{\n                borderRadius: '25px',\n                height: '24px',\n                marginRight: '10px',\n                width: '24px',\n              }}\n            />\n            <span style={{color: \"white\"}}>{option.name}</span>\n          </Link>}\n          {option.type===\"game\" && <Link to={\"/games/\" + option.name.split(\" \").join('').toLowerCase() }>\n            <img\n              alt={option.title}\n              src={option.image}\n              style={{\n                borderRadius: '25px',\n                height: '24px',\n                marginRight: '10px',\n                width: '24px',\n              }}\n            />\n            <span style={{color: \"white\"}}>{option.name}</span>\n          </Link>}\n          {option.type===\"label\" && \n            <span style={{color: \"white\"}}>{option.name}</span>\n          }\n        </Fragment>\n      )}\n    />\n  );\n}\n\nexport default SearchBox;\n","/home/sean/Desktop/projects/common2/commongg/src/components/FeedType.js",["200","201"],"import React, { useEffect, useState } from 'react';\nimport Post from './Post/Post.js';\n\n\nfunction FeedType(props) {\n\n  const [posts, setPosts] = useState({\n    \"00000000\": {\n      author: \"404\",\n      caption: \"Nothing here\",\n      game: \"\",\n      link: \"\",\n      text: \"There are no posts to see\",\n      timestamp: 0,\n      title: \"No Content\",\n      type: \"text\"\n    }\n  });\n\n  const filter = props.filter;\n  const sort = props.sort;\n  const postRefresh = props.postRefresh;\n\n  useEffect(() => {\n    console.log(\"filter changed\")\n    console.log(filter)\n    if (filter !== \"\") {\n      props.getPosts(filter, sort, setPosts);\n    } else {\n      setPosts([]);\n    }\n  }, [filter,sort, postRefresh]);\n\n  return (\n    <div>\n      {Object.values(posts).reverse().map((post, i) => {\n        if(post.author !== \"404\")\n        return (\n          <div key={Object.keys(posts).reverse()[i]}>\n            <Post {...props} post={post} postId={Object.keys(posts).reverse()[i]} showCommentButton={false}/><br />\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default FeedType;\n","/home/sean/Desktop/projects/common2/commongg/src/components/Post/Post.js",["202","203"],"import React, { useState, useEffect } from \"react\";\nimport Text from '../Text.js';\nimport PostFooter from './PostFooter.js'\nimport ProfilePicture from '../ProfilePicture.js';\n\nfunction Post(props) {\n\n  const [author, setAuthor] = useState({ profile: \"\" });\n\n  useEffect(() => {\n    props.getUser(props.post.author, setAuthor)\n  }, [props.post]);\n\n  function getStyle() {\n    if (props.style === undefined) {\n      return ({\n        borderStyle: 'solid',\n        borderRadius: '8px',\n        borderColor: '#5F5177',\n        borderWidth: '2px',\n        paddingBottom: '0px',\n        paddingLeft: '20px',\n        paddingRight: '0px'\n      });\n    } else {\n      return props.style;\n    }\n  }\n\n  const checkType = () => {\n\n    if (props.post.type === \"text\") {\n      return\n    } else if (props.post.type === \"image\") {\n      return (\n        <img\n          src={props.post.link}\n          alt=\"posted image\"\n          style={{\n            width: \"100%\"\n          }}\n        />\n      )\n    }\n    // Code to turn on video later!\n    // else if (props.post.type === \"video\") {\n    //   return (\n    //     <video controls name=\"posted video\"\n    //       style={{\n    //         width: \"100%\"\n    //       }}>\n    //       <source\n    //         src={props.post.link}\n    //       />\n    //     </video>\n    //   )\n    // }\n  }\n\n \n\n  const showCategory = () => {\n    if (props.showCategory !== undefined) {\n      return (\n        <div class=\"p-2\">\n          <Text text={props.post.category}\n            style={{\n              borderStyle: 'solid',\n              borderWidth: '1px',\n              borderRadius: '5px',\n              height: '25px',\n              color: '#BF9AFC',\n              borderColor: '#BF9AFC'\n            }} />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"Post\" style={getStyle()}>\n      <div className=\"container\">\n        <br />\n        <div className=\"row\">\n          <div className=\"col-8 row\">\n            <div className=\"col-1\">\n              <ProfilePicture currentUserInfo={author} width=\"40px\" height=\"40px\" />\n            </div>\n            <div className=\"col-11 row\" style={{ marginBottom: '5px', lineHeight: '4px' }}>\n              <div className=\"col-1\"></div>\n              <div className=\"col-10\">\n                <br />\n                <br />\n                <Text text={author.username} />\n                <Text text={new Date(props.post.timestamp).toLocaleTimeString(\"en-US\") + \" - \" + new Date(props.post.timestamp).toLocaleDateString(\"en-US\")}\n                  style={{ color: '#BF9AFC', fontSize: '12px' }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div class=\"d-flex align-items-center flex-wrap\">\n              <div class=\"p-2\"><Text text={props.post.title} style={{ fontSize: '32px' }} /></div>\n              {showCategory()}\n            </div>\n            <Text text={props.post.text} style={{ fontSize: '18px' }} />\n            {checkType()}\n          </div>\n        </div>\n        <PostFooter {...props} />\n      </div>\n      <br />\n    </div >\n  );\n}\n\nexport default Post;\n","/home/sean/Desktop/projects/common2/commongg/src/components/Post/Comment.js",["204","205","206"],"import React, { useEffect, useState } from 'react';\nimport Text from '../Text.js';\nimport IconButton from '../IconButton.js';\nimport ProfilePicture from '../ProfilePicture.js';\n\nfunction Comment(props) {\n\n    const [author, setAuthor] = useState({ profile: \"\" });\n\n    useEffect(() => {\n        console.log(props.comment.author);\n        props.getUser(props.comment.author, setAuthor);\n        console.log(author);\n    }, [props.comment])\n\n    const convertNum = (val) => {\n        let editedVal = val;\n        if (editedVal > 1000000) {\n            editedVal = Math.round(val / 100000) / 10;\n            return (editedVal + \"mil\");\n        }\n        if (editedVal > 1000) {\n            editedVal = Math.round(val / 100) / 10;\n            return (editedVal + \"k\");\n        } else {\n            return editedVal;\n        }\n    }\n\n    return (\n        <div className=\"Comment\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-1\">\n                        <ProfilePicture currentUserInfo={author} width=\"40px\" height=\"40px\" />\n                    </div>\n                    <div className=\"col-11\" style={{marginBottom: '5px', lineHeight: '4px'}}>\n                        <br/>\n                        <br/>\n                        <Text text={author.username}/>\n                        <Text text={new Date(props.comment.timestamp).toLocaleTimeString(\"en-US\") + \" - \" + new Date(props.comment.timestamp).toLocaleDateString(\"en-US\")}\n                            style={{color:'#BF9AFC', fontSize: '12px'}}\n                        />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Text text={props.comment.commentText} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                        {/*put nested comments here*/}\n                        {/*props.comment.comments.map(comment => {\n                            return (\n                                <div className=\"commentBorder\">\n                                    <Comment comment={comment} getUser={props.getUser}/>\n                                </div>\n                            );\n                        })*/}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Comment;\n","/home/sean/Desktop/projects/common2/commongg/src/components/Post/CreatePostModal.js",["207","208","209","210","211"],"import React, { useEffect, useRef, useState } from 'react';\nimport excludeIcon from \"../../images/icons/exclude-1.png\";\nimport Select from 'react-select';\nimport ImageIcon from \"../../images/icons/image22.png\";\n\nfunction CreatePostModal(props) {\n    const postTextRef = useRef();\n    const postTitleRef = useRef();\n    const fileInputRef = useRef();\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [postTitle, setPostTitle] = useState({ current: { value: \"\" } });\n    const [postText, setPostText] = useState({ current: { value: \"\" } });\n    const [selectedOption, setSelectedOption] = useState(setOptions()[0].label);\n\n    const buttonStyle = {\n        color: \"#BF9AFC\",\n        backgroundColor: \"#292833\",\n        border: \"2px solid #BF9AFC\",\n        width: \"100%\",\n        textAlign: \"left\",\n        borderRadius: \"8px\"\n    };\n    const modalContentStyle = {\n        color: \"#BF9AFC\",\n        backgroundColor: \"#202020\",\n    };\n    const modalHeaderStyle = {\n        border: \"none\",\n        textAlign: \"center\",\n        padding: \"0 !important\"\n    };\n    const postButtonStyle = {\n        height: 48,\n        marginLeft: \"auto\",\n        backgroundColor: \"#BF9AFC\",\n        color: \"#292833\",\n        border: \"solid\",\n        borderRadius: \"10px\",\n        borderColor: \"#BF9AFC\",\n        borderWidth: \"2px\",\n        marginRight: \"40px\"\n    };\n    const fileInputImageStyle = {\n        height: 48,\n        backgroundColor: \"transparent\",\n        color: \"#BF9AFC\",\n        borderRadius: \"10px\",\n        borderColor: \"#BF9AFC\",\n        cursor: \"pointer\",\n        marginRight: \"20px\",\n        marginLeft: \"40px\"\n    };\n    const titleInputStyle = {\n        color: \"#BF9AFC\",\n        backgroundColor: \"#202020\",\n        border: \"none\",\n        marginTop: \"none\"\n    };\n    const textAreaStyle = {\n        resize: \"none\",\n        color: \"#BF9AFC\",\n        backgroundColor: \"#202020\",\n        border: \"none\",\n        marginTop: 0\n    };\n    const dropdownStyle = {\n        control: (base) => ({\n            ...base,\n            backgroundColor: \"#292833\",\n            color: \"#BF9AFC\",\n            fontSize: 16,\n            border: \"2px solid #BF9AFC\",\n            borderRadius: '8px !important',\n            cursor: \"pointer\",\n            width: \"160px\",\n            height: \"48px\",\n            padding: 0,\n            textAlign: \"center\",\n            backgroundColor: \"transparent\",\n        }),\n        option: (provided) => ({\n            ...provided,\n            color: \"#BF9AFC\",\n            fontSize: 16,\n            backgroundColor: \"#292833\",\n            textAlign: \"left\",\n            cursor: \"pointer\",\n            borderBottom: '1px solid #BF9AFC',\n        }),\n        singleValue: (provided) => ({\n            ...provided,\n            color: \"#BF9AFC\",\n            fontSize: 16,\n            textAlign: \"center\"\n        }),\n        menuList: (base) => ({\n            ...base,\n            backgroundColor: \"#292833\",\n            borderRadius: '8px !important',\n            textAlign: \"center\"\n        }),\n        menu: (base) => ({\n            ...base,\n            backgroundColor: \"#292833\",\n        })\n    }\n    const modalStyle = {\n        position: \"absolute\",\n        top: \"170px\"\n    };\n    function clearFields() {\n        postTitleRef.current.value = \"\";\n        postTextRef.current.value = \"\";\n        fileInputRef.current.value = \"\";\n    };\n\n    function handlePostClick() {\n        if (selectedFile !== null) {\n            props.storeImage(selectedFile, createPost);\n        } else {\n            createPost(\"\");\n        }\n    }\n\n    function createPost(url) {\n        let postType = getPostType();\n        //find the game id by game selected\n        let gameId = props.allGames.findIndex((element) => {\n            return element.title === selectedOption;\n        });\n        console.log(selectedOption);\n        console.log(props.allGames);\n\n        props.createPost({\n            text: postText.current.value,\n            author: props.currentUserId,\n            caption: \"CAPTION_TEXT\",\n            game: gameId.toString(),\n            link: url,\n            timestamp: Date.now(),\n            title: postTitle.current.value,\n            type: postType,\n            numComments: 0,\n            category: selectedOption\n        });\n        clearFields();\n        //get the feedcontainer to update posts from db\n        props.updatePostRefresh();\n        setSelectedFile(null);\n    }\n\n    function getPostType() {\n        let postTitleCurrentValue = postTitle.current.value;\n        let postTextCurrentValue = postText.current.value;\n\n        if (selectedFile !== null) {\n            let sf = selectedFile.type.toLowerCase();\n\n            if (sf.startsWith(\"video/\")) {\n                return \"video\";\n            }\n            else if (sf.startsWith(\"image/\")) {\n                return \"image\";\n            }\n        }\n        if (postTitleCurrentValue !== \"\" || postTextCurrentValue !== \"\") {\n            return \"text\";\n        }\n        return \"\";\n    }\n\n    function fileSelectedHandler(e) {\n        if (e.target.files && e.target.files[0]) {\n            let file = e.target.files[0];\n            console.log(file);\n            setSelectedFile(file);\n        }\n    }\n    function setOptions() {\n        let tempArr = [];\n        console.log(props.currentUserInfo);\n        props.currentUserInfo.games.map((game) => {\n            tempArr.push({ label: props.allGames[game].title, value: game });\n        });\n        return tempArr;\n    }\n\n    function handleOnChangeDropdown(e) {\n        setSelectedOption(e.label);\n    }\n\n    return (\n        <div className=\"CreatePostModal\">\n            <button type=\"button\" style={buttonStyle} className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createPostModal\">\n                <img\n                    src={excludeIcon}\n                    alt=\"post button\"\n                    style={{\n                        width: \"40px\",\n                        height: \"40px\",\n                        marginRight: \".5rem\"\n                    }} />\n                    make a post\n                </button>\n            <div className=\"modal fade\" id=\"createPostModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"createPostModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\" style={modalContentStyle}>\n                        <div className=\"modal-header\" style={modalHeaderStyle}>\n                            <h4 className=\"modal-title\" id=\"createPostModalLabel\">title...</h4>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => clearFields()}>\n                                <span aria-hidden=\"true\">x</span>\n                            </button>\n                        </div>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={() => setPostTitle(postTitleRef)}\n                            ref={postTitleRef}\n                            style={titleInputStyle}\n                        />\n                        <hr style={{ padding: \"0\", backgroundColor: '#BF9AFC', width: '90%' }} />\n                        <textarea\n                            className=\"form-control\"\n                            onChange={() => setPostText(postTextRef)}\n                            ref={postTextRef}\n                            placeholder=\"type your body here...\"\n                            rows=\"5\"\n                            style={textAreaStyle}\n                        />\n                        <hr style={{ backgroundColor: '#BF9AFC', width: '90%' }} />\n                        <div style={{ display: \"flex\" }}>\n                            <input id=\"fileInput\" type=\"file\" accept=\"image/*\" style={{ display: \"none\" }} ref={fileInputRef} onChange={fileSelectedHandler} />\n                            <label htmlFor=\"fileInput\"><img style={fileInputImageStyle} src={ImageIcon}></img></label>\n                            <div>\n                                <Select theme={(theme) => ({\n                                    ...theme,\n                                    colors: {\n                                        ...theme.colors,\n                                        text: \"#292833\",\n                                        primary: '#BF9AFC',\n                                    },\n                                })}\n                                    styles={dropdownStyle} onChange={handleOnChangeDropdown}\n                                    options={setOptions()}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    defaultValue={setOptions()[0]}\n                                />\n                            </div>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => handlePostClick()} data-dismiss=\"modal\" style={postButtonStyle}>Post</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CreatePostModal;\n","/home/sean/Desktop/projects/common2/commongg/src/components/Post/PostFooter.js",["212","213"],"/home/sean/Desktop/projects/common2/commongg/src/components/IconButton.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/Post/CreateCommentModal.js",[],"/home/sean/Desktop/projects/common2/commongg/src/components/ReactionIcon.js",["214"],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":74,"column":6,"nodeType":"221","endLine":74,"endColumn":19,"suggestions":"222"},{"ruleId":"219","severity":1,"message":"223","line":87,"column":6,"nodeType":"221","endLine":87,"endColumn":8,"suggestions":"224"},{"ruleId":"219","severity":1,"message":"225","line":96,"column":6,"nodeType":"221","endLine":96,"endColumn":8,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":319,"column":9,"nodeType":"229","messageId":"230","endLine":319,"endColumn":27},{"ruleId":"227","severity":1,"message":"231","line":336,"column":9,"nodeType":"229","messageId":"230","endLine":336,"endColumn":20},{"ruleId":"227","severity":1,"message":"232","line":28,"column":9,"nodeType":"229","messageId":"230","endLine":28,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":66,"column":8,"nodeType":"235","endLine":66,"endColumn":27},{"ruleId":"227","severity":1,"message":"236","line":1,"column":25,"nodeType":"229","messageId":"230","endLine":1,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":44,"column":11,"nodeType":"235","endLine":44,"endColumn":45},{"ruleId":"237","severity":1,"message":"238","line":60,"column":61,"nodeType":"239","endLine":60,"endColumn":99},{"ruleId":"237","severity":1,"message":"238","line":79,"column":65,"nodeType":"239","endLine":79,"endColumn":103},{"ruleId":"233","severity":1,"message":"234","line":95,"column":25,"nodeType":"235","endLine":95,"endColumn":44},{"ruleId":"240","severity":1,"message":"241","line":107,"column":11,"nodeType":"235","endLine":107,"endColumn":80},{"ruleId":"227","severity":1,"message":"242","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":23},{"ruleId":"233","severity":1,"message":"234","line":38,"column":11,"nodeType":"235","endLine":38,"endColumn":45},{"ruleId":"227","severity":1,"message":"243","line":10,"column":10,"nodeType":"229","messageId":"230","endLine":10,"endColumn":16},{"ruleId":"244","severity":1,"message":"245","line":19,"column":13,"nodeType":"235","endLine":21,"endColumn":39},{"ruleId":"227","severity":1,"message":"236","line":1,"column":29,"nodeType":"229","messageId":"230","endLine":1,"endColumn":37},{"ruleId":"219","severity":1,"message":"246","line":28,"column":8,"nodeType":"221","endLine":28,"endColumn":10,"suggestions":"247"},{"ruleId":"240","severity":1,"message":"248","line":52,"column":13,"nodeType":"235","endLine":52,"endColumn":120},{"ruleId":"233","severity":1,"message":"234","line":54,"column":21,"nodeType":"235","endLine":54,"endColumn":59},{"ruleId":"227","severity":1,"message":"249","line":1,"column":35,"nodeType":"229","messageId":"230","endLine":1,"endColumn":43},{"ruleId":"227","severity":1,"message":"250","line":6,"column":7,"nodeType":"229","messageId":"230","endLine":6,"endColumn":21},{"ruleId":"227","severity":1,"message":"251","line":10,"column":10,"nodeType":"229","messageId":"230","endLine":10,"endColumn":19},{"ruleId":"227","severity":1,"message":"252","line":11,"column":10,"nodeType":"229","messageId":"230","endLine":11,"endColumn":17},{"ruleId":"227","severity":1,"message":"253","line":43,"column":9,"nodeType":"229","messageId":"230","endLine":43,"endColumn":21},{"ruleId":"227","severity":1,"message":"254","line":48,"column":12,"nodeType":"229","messageId":"230","endLine":48,"endColumn":27},{"ruleId":"227","severity":1,"message":"255","line":54,"column":9,"nodeType":"229","messageId":"230","endLine":54,"endColumn":17},{"ruleId":"219","severity":1,"message":"256","line":13,"column":3,"nodeType":"229","endLine":13,"endColumn":12,"suggestions":"257"},{"ruleId":"227","severity":1,"message":"258","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":14},{"ruleId":"219","severity":1,"message":"259","line":28,"column":8,"nodeType":"221","endLine":28,"endColumn":22,"suggestions":"260"},{"ruleId":"219","severity":1,"message":"261","line":36,"column":8,"nodeType":"221","endLine":36,"endColumn":22,"suggestions":"262"},{"ruleId":"219","severity":1,"message":"263","line":45,"column":8,"nodeType":"221","endLine":45,"endColumn":10,"suggestions":"264"},{"ruleId":"240","severity":1,"message":"248","line":89,"column":29,"nodeType":"235","endLine":89,"endColumn":52},{"ruleId":"240","severity":1,"message":"248","line":92,"column":29,"nodeType":"235","endLine":92,"endColumn":52},{"ruleId":"227","severity":1,"message":"265","line":2,"column":8,"nodeType":"229","messageId":"230","endLine":2,"endColumn":12},{"ruleId":"219","severity":1,"message":"259","line":40,"column":8,"nodeType":"221","endLine":40,"endColumn":32,"suggestions":"266"},{"ruleId":"219","severity":1,"message":"267","line":47,"column":8,"nodeType":"221","endLine":47,"endColumn":30,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":64,"column":50,"nodeType":"271","messageId":"272","endLine":64,"endColumn":52},{"ruleId":"219","severity":1,"message":"273","line":13,"column":6,"nodeType":"221","endLine":13,"endColumn":8,"suggestions":"274"},{"ruleId":"233","severity":1,"message":"234","line":69,"column":15,"nodeType":"235","endLine":69,"endColumn":75},{"ruleId":"227","severity":1,"message":"275","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"276","line":3,"column":10,"nodeType":"229","messageId":"230","endLine":3,"endColumn":21},{"ruleId":"227","severity":1,"message":"277","line":6,"column":18,"nodeType":"229","messageId":"230","endLine":6,"endColumn":27},{"ruleId":"227","severity":1,"message":"242","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":33},{"ruleId":"219","severity":1,"message":"259","line":32,"column":6,"nodeType":"221","endLine":32,"endColumn":32,"suggestions":"278"},{"ruleId":"269","severity":1,"message":"270","line":36,"column":53,"nodeType":"271","messageId":"272","endLine":36,"endColumn":55},{"ruleId":"219","severity":1,"message":"259","line":12,"column":6,"nodeType":"221","endLine":12,"endColumn":18,"suggestions":"279"},{"ruleId":"244","severity":1,"message":"245","line":36,"column":9,"nodeType":"235","endLine":42,"endColumn":11},{"ruleId":"227","severity":1,"message":"280","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":18},{"ruleId":"219","severity":1,"message":"281","line":14,"column":8,"nodeType":"221","endLine":14,"endColumn":23,"suggestions":"282"},{"ruleId":"227","severity":1,"message":"283","line":16,"column":11,"nodeType":"229","messageId":"230","endLine":16,"endColumn":21},{"ruleId":"227","severity":1,"message":"275","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":79,"column":13,"nodeType":"286","messageId":"287","endLine":79,"endColumn":28},{"ruleId":"227","severity":1,"message":"288","line":107,"column":11,"nodeType":"229","messageId":"230","endLine":107,"endColumn":21},{"ruleId":"269","severity":1,"message":"289","line":182,"column":48,"nodeType":"271","messageId":"290","endLine":182,"endColumn":50},{"ruleId":"233","severity":1,"message":"234","line":233,"column":56,"nodeType":"235","endLine":233,"endColumn":105},{"ruleId":"219","severity":1,"message":"291","line":36,"column":6,"nodeType":"221","endLine":36,"endColumn":12,"suggestions":"292"},{"ruleId":"269","severity":1,"message":"270","line":79,"column":50,"nodeType":"271","messageId":"272","endLine":79,"endColumn":52},{"ruleId":"219","severity":1,"message":"293","line":16,"column":6,"nodeType":"221","endLine":16,"endColumn":8,"suggestions":"294"},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUserInfo', 'database', and 'initializeUser'. Either include them or remove the dependency array.","ArrayExpression",["297"],"React Hook useEffect has a missing dependency: 'twitchToken'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has missing dependencies: 'auth' and 'startUp'. Either include them or remove the dependency array.",["299"],"no-unused-vars","'getTitleOfGameById' is assigned a value but never used.","Identifier","unusedVar","'getAllGames' is assigned a value but never used.","'addCSS' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useRef' is defined but never used.","'search' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'props.currentUserInfo.games'. Either include it or remove the dependency array.",["300"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fragment' is defined but never used.","'AsyncTypeahead' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'options' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","'handleOnKeyDown' is defined but never used.","'filterBy' is assigned a value but never used.","React Hook useEffect contains a call to 'setPageState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.allGames] as a second argument to the useEffect Hook.",["301"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["302"],"React Hook useEffect has a missing dependency: 'props.currentUserId'. Either include it or remove the dependency array.",["303"],"React Hook useEffect has missing dependencies: 'followBtnState', 'props.currentUserInfo.following', and 'props.pageId'. Either include them or remove the dependency array. You can also do a functional update 'setFollowBtnState(f => ...)' if you only need 'followBtnState' in the 'setFollowBtnState' call.",["304"],"'Text' is defined but never used.",["305"],"React Hook useEffect has missing dependencies: 'postId' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["306"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'props.currentUserInfo.about_me' and 'props.currentUserInfo.profile_picture'. Either include them or remove the dependency array. If 'setSelectedFile' needs the current value of 'props.currentUserInfo.profile_picture', you can also switch to useReducer instead of useState and read 'props.currentUserInfo.profile_picture' in the reducer.",["307"],"'useEffect' is defined but never used.","'useLocation' is defined but never used.","'setGameId' is assigned a value but never used.",["308"],["309"],"'IconButton' is defined but never used.","React Hook useEffect has missing dependencies: 'author' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["310"],"'convertNum' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'modalStyle' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'reactions'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'props.reaction'. Either include it or remove the dependency array.",["312"],"no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},"Update the dependencies array to be: [currentUser, currentUserInfo, database, initializeUser]",{"range":"345","text":"346"},"Update the dependencies array to be: [twitchToken]",{"range":"347","text":"348"},"Update the dependencies array to be: [auth, startUp]",{"range":"349","text":"350"},"Update the dependencies array to be: [props.currentUserInfo.games]",{"range":"351","text":"352"},"Add dependencies array: [props.allGames]",{"range":"353","text":"354"},"Update the dependencies array to be: [props, props.pageId]",{"range":"355","text":"356"},"Update the dependencies array to be: [props.currentUserId, props.pageId]",{"range":"357","text":"358"},"Update the dependencies array to be: [followBtnState, props.currentUserInfo.following, props.pageId]",{"range":"359","text":"360"},"Update the dependencies array to be: [postId, commentRefresh, props]",{"range":"361","text":"362"},"Update the dependencies array to be: [post, commentRefresh, props, postId]",{"range":"363","text":"364"},"Update the dependencies array to be: [props.currentUserInfo.about_me, props.currentUserInfo.profile_picture]",{"range":"365","text":"366"},"Update the dependencies array to be: [filter, sort, postRefresh, props]",{"range":"367","text":"368"},"Update the dependencies array to be: [props, props.post]",{"range":"369","text":"370"},"Update the dependencies array to be: [author, props, props.comment]",{"range":"371","text":"372"},"Update the dependencies array to be: [post, reactions]",{"range":"373","text":"374"},"Update the dependencies array to be: [props.reaction]",{"range":"375","text":"376"},[2402,2415],"[currentUser, currentUserInfo, database, initializeUser]",[2786,2788],"[twitchToken]",[3025,3027],"[auth, startUp]",[850,852],"[props.currentUserInfo.games]",[1262,1262],", [props.allGames]",[1030,1044],"[props, props.pageId]",[1252,1266],"[props.currentUserId, props.pageId]",[1565,1567],"[followBtnState, props.currentUserInfo.following, props.pageId]",[1095,1119],"[postId, commentRefresh, props]",[1287,1309],"[post, commentRefresh, props, postId]",[532,534],"[props.currentUserInfo.about_me, props.currentUserInfo.profile_picture]",[671,697],"[filter, sort, postRefresh, props]",[331,343],"[props, props.post]",[422,437],"[author, props, props.comment]",[1002,1008],"[post, reactions]",[465,467],"[props.reaction]"]